:host {
    display: block;
    width: 100%;
}

.question-preview {
    background-color: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);
}

.question-preview h2 {
    margin: 0;
    font-size: clamp(0.75rem, 2vw + 0.5rem, 1.25rem);
    color: var(--gray-800);
}

.answers-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, 20rem), 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
}

.answer-card {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: white;
    padding: 1rem;
    border-radius: 0.5rem;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease;
}

.answer-card:hover {
    transform: translateY(-0.125rem);
}

.answer-card.correct {
    border-left: 0.25rem solid var(--success);
}

.answer-content {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex: 1;
}

.answer-marker {
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    background-color: var(--gray-200);
    color: var(--success);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
}

.answer-text {
    margin: 0;
}

.answer-actions {
    display: flex;
    gap: 0.5rem;
}

.answer-form {
    background-color: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.1);
}

.answer-form.hidden {
    display: none;
}

.answer-form h3 {
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: clamp(0.75rem, 2vw + 0.5rem, 1.25rem);
}

.navigation-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 2rem;
}

.notification {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    padding: 1rem 1.5rem;
    border-radius: 0.25rem;
    color: white;
    z-index: 1000;
    box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.15);
    transition: opacity 0.3s, transform 0.3s;
    opacity: 0;
    transform: translateY(1rem);
    pointer-events: none;
}

.notification.visible {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
}

.notification.success {
    background-color: var(--success);
}

.notification.error {
    background-color: var(--error);
}
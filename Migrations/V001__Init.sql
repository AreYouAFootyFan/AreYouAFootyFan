CREATE TABLE
  roles (
    role_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    role_name VARCHAR(32) NOT NULL UNIQUE
  );

CREATE TABLE
  users (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    google_id VARCHAR(256) NOT NULL UNIQUE,
    username VARCHAR(16) UNIQUE,
    role_id INT NOT NULL DEFAULT 1,
    deactivated_at TIMESTAMP
  );

CREATE TABLE
  badges (
    badge_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    badge_name VARCHAR(32) NOT NULL UNIQUE,
    minimum_points INT NOT NULL
  );

CREATE TABLE
  badge_history (
    badge_history_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    badge_id INT NOT NULL,
    achieved_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  );

CREATE TABLE
  categories (
    category_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(32) NOT NULL,
    category_description VARCHAR(64) NOT NULL,
    deactivated_at TIMESTAMP DEFAULT NULL
  );

CREATE TABLE
  quizzes (
    quiz_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    quiz_title VARCHAR(64) NOT NULL,
    quiz_description VARCHAR(128) NOT NULL,
    category_id INT NOT NULL,
    created_by INT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deactivated_at TIMESTAMP DEFAULT NULL
  );

CREATE TABLE
  difficulty_levels (
    difficulty_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    difficulty_level VARCHAR(16) NOT NULL,
    time_limit_seconds INT NOT NULL DEFAULT 10,
    points_on_correct INT NOT NULL DEFAULT 10,
    points_on_incorrect INT NOT NULL DEFAULT -10
  );

CREATE TABLE
  questions (
    question_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    quiz_id INT NOT NULL,
    question_text VARCHAR(256) NOT NULL,
    difficulty_id INT NOT NULL
  );

CREATE TABLE
  answers (
    answer_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    question_id INT NOT NULL,
    answer_text VARCHAR(128) NOT NULL,
    is_correct bool NOT NULL DEFAULT FALSE
  );

CREATE TABLE
  quiz_attempts (
    attempt_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    quiz_id INT NOT NULL,
    start_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    end_time TIMESTAMP
  );

CREATE TABLE
  user_responses (
    response_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    attempt_id INT NOT NULL,
    question_id INT NOT NULL,
    chosen_answer INT NOT NULL,
    points_earned INT NOT NULL
  );

ALTER TABLE users
ADD FOREIGN KEY (role_id) REFERENCES roles (role_id);

ALTER TABLE badge_history
ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE badge_history
ADD FOREIGN KEY (badge_id) REFERENCES badges (badge_id);

ALTER TABLE quizzes
ADD FOREIGN KEY (category_id) REFERENCES categories (category_id);

ALTER TABLE quizzes
ADD FOREIGN KEY (created_by) REFERENCES users (user_id);

ALTER TABLE questions
ADD FOREIGN KEY (quiz_id) REFERENCES quizzes (quiz_id);

ALTER TABLE questions
ADD FOREIGN KEY (difficulty_id) REFERENCES difficulty_levels (difficulty_id);

ALTER TABLE answers
ADD FOREIGN KEY (question_id) REFERENCES questions (question_id);

ALTER TABLE quiz_attempts
ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE quiz_attempts
ADD FOREIGN KEY (quiz_id) REFERENCES quizzes (quiz_id);

ALTER TABLE user_responses
ADD FOREIGN KEY (attempt_id) REFERENCES quiz_attempts (attempt_id);

ALTER TABLE user_responses
ADD FOREIGN KEY (question_id) REFERENCES questions (question_id);

ALTER TABLE user_responses
ADD FOREIGN KEY (chosen_answer) REFERENCES answers (answer_id);